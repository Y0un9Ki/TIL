def add_many(*args) #*args 즉 "*매개변수"는 매개변수가 많을때 많은 매개변수를 받을때 *를 입력하게 된다. ex) add_many(1,2,3,4,...n)
                    # '*'는 기본적으로 리스트 형태로 받게 된다.
    result = 0 
    for i in args: 
        result = result + i   # *args에 입력받은 모든 값을 더한다.
    return result 


def print_kwargs(**kwargs): # "*"는 여러개의 매개변수를 리스트의 형태로 받게 되는데, '**'는 매개변수를 딕셔너리로 받을때 사용된다.
    print(kwargs) #이것의 결과값은 {'a':1,'b':2}가 나오게 된다.(딕셔너리의 형태로 나옴)
    print(kwargs['a']) #이것의 결과는 1로 나오게 된다.
    print(kwargs['b']) #이것의 결과는 2로 나오게 된다.
print_kwargs(a=1,b=2)

#함수의 리턴값은 하나이다!!!
def add_and_mul(a,b):

    resutn a+b,a*b
print(add_and_mul(3,4)) #이 결과값은 (7,12)로 하나의 튜플값으로 나오게된다.(튜플의 형태로 나오게 된다.)

a,b=add_and_mul(3,4)
print(a) #이 결과값은 7이 나오게되고
print(b) #이 결과값은 12가 나오게 된다.


a=1 #이 변수는 전역변수이다.
def vartest(a):
    a+=1 #이때 a는 전역변수와 다른 지역변수로 함수 안에서만 작용하는 변수이다. 함수가 끝나면 사라진다.
vartest(a) #함수의 리턴값이 없기에 null값이 나온다.
print(a) #이것의 결과값은 1이 나온다. why?? 그러기에 함수안에서의 a(지역변수)는 함수가 끝나면 사라지기에 전역변수의 값이 출력된다. (들여쓰기의 의미를 잘 생각해보자)



for i in range(10):
    print(i) #이것의 결과값은 0한줄내려가서1한줄내려가서2...9까지 나오게된다. 죽 프린트함수는 기본적으로 줄바꿈에 기능이 들어간다.
    print(i,end=" ") #이 결과값은 0 1 2 3 ... 10이 나오게 된다. end=" " 의 존재로 줄바꿈을 하지않고 한칸씩 띄워서 결과값을 보여준다.